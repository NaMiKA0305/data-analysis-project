# -*- coding: utf-8 -*-
"""assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ENcSRHzIw098nPNgZpIVRu8O7fNgm9Ox
"""

import pandas as pd
import seaborn as sns
import plotly.express as px   # for 3d plots 
import plotly.graph_objs as go
import plotly.offline as py

data =pd.read_csv("/content/1. Weather Data.csv")

data

data.shape

data.index

data.head()

data.tail()

from google.colab import drive
drive.mount('/content/drive')

data.columns

data

import numpy as np
from matplotlib import pyplot as plt

ys = 200 + np.random.randn(100)
x = [x for x in range(len(ys))]

plt.plot(x, ys, '-')
plt.fill_between(x, ys, 195, where =(ys > 195), facecolor ='g', alpha = 0.6)
plt.title("Sample Visualization")
plt.show()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import re
import seaborn as sns
from wordcloud import wordcloud
import datetime as dt

data.info()

data.isnull().sum()

data['Temp_C'].unique()

# df_clg['In-state'].value_counts().plot.()
import matplotlib.pyplot as plt
plt.plot([1, 2, 3, 4])
plt.ylabel('some numbers')
plt.show()

data['Weather'].unique()[150:200]

df_clg=pd.read_csv('/content/National Universities Rankings.csv')
df_clg

df_clg['Tuition and fees'].value_counts().plot.bar()

import seaborn as sns

plt.figure(figsize =[20,10])
sns.scatterplot(x= data["Temp_C"], y= data["Weather"])

location = ['New York NY', 'logan UT', 'Greensboro SC']
index= [1, 10, 100]
plt.figure(figsize=(9, 5))
plt.subplot(131)
plt.xticks(rotation=90)
plt.bar(location, index)
plt.subplot(132)
plt.xticks(rotation=90)
plt.scatter(location, index)
plt.subplot(133)
plt.plot(location, index)
plt.suptitle('Categorical Plotting')
plt.show()
plt.xticks(rotation=90)

from pandas.core.arrays.period import validate_dtype_freq
total_Name = len(df_clg)
total_validate = len(data)
print(total_Name)
print(total_validate)

df_clg[df_clg["In-state"].isnull()]

df_clg['In-state']= df_clg['In-state'].fillna("others")

df_clg

plt.figure(figsize = [12, 6])
sns.barplot(x = df_clg["Tuition and fees"], y = df_clg["Rank"], palette = "Set2")
plt.xticks(rotation=90)

plt.figure(figsize = [12, 6])
sns.boxplot(x = data["Temp_C"], y = data["Visibility_km"], palette = "Set2")
plt.xticks(rotation=90)

print("There are {} rows and {} columns are present in the Data Set".format(data.shape[0],data.shape[1]))

print("There are {} rows and {} columns are present in the Data Set".format(df_clg.shape[0],df_clg.shape[1]))

df_clg.describe()

data.describe()

import missingno as msno
msno.bar(df_clg)
plt.show()

import missingno as msno
msno.bar(data)
plt.show()

df_clg.columns

list=['index', 'Name', 'Location', 'Rank', 'Description', 'Tuition and fees',
       'In-state', 'Undergrad Enrollment']

for i in list[1:]:
  df_clg[i].hist(bins=50,figsize=(10,6))
  plt.yscale('log')
  plt.title(i)
  plt.show()

df_clg.drop(columns=['Name'])

plt.figure(figsize=(20,15))
sns.heatmap(df_clg.corr(),cmap='PiYG' , annot=True,linewidths=1,fmt='0.2f')

X= df_clg.iloc[:,:-1]
y= df_clg.iloc[:,-1]

y

plt.figure(figsize=(20,15))
sns.heatmap(data.corr(),cmap='PiYG' , annot=True,linewidths=1,fmt='0.2f')

X= data.iloc[:,:-1]
y= data.iloc[:,-1]

y

sns.countplot(x='Location',data=df_clg)
plt.xticks(rotation=90)
from collections import Counter
counter =Counter(df_clg['Location'])
print(counter)

data.drop(columns=['Temp_C','Visibility_km'],inplace=True)

data